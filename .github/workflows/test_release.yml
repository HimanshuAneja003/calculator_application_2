name: Release Pipeline

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Replace with your Python version

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Replace with your dependencies file if applicable

    - name: Run Tests
      run: |
        python -m unittest discover

    - name: Extract Version Number
      id: extract_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.extract_version.outputs.VERSION }}
        release_name: Release ${{ steps.extract_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v2
      with:
        name: 'Release Artifacts'
        path: |
          dist/  # Replace with the path where your artifacts are generated

    - name: Attach Artifacts to Release
      uses: actions/download-artifact@v2
      with:
        name: 'Release Artifacts'
        path: './dist'  # Replace with the path where your artifacts are expected

    - name: Publish Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/*
        asset_name: 'your-artifact-name.zip'  # Change this to match your artifact name
        asset_content_type: 'application/zip'
